{"version":3,"sources":["menu-items.js","App/layout/AdminLayout/Breadcrumb/index.js","Demo/Authentication/SignUp/ForgotPassword.js","store/constant.js"],"names":["items","id","title","type","icon","children","url","classes","Breadcrumb","state","main","item","componentWillReceiveProps","navigation","map","index","getCollapse","filter","collapse","document","location","pathname","config","basename","setState","breadcrumb","this","className","href","DEMO","BLANK_LINK","breadcrumbs","to","Component","ForgotPassword","props","useState","email","setEmail","loading","setLoading","handleSubmit","e","a","preventDefault","axios","post","process","toast","success","response","data","error","autoClose","pauseOnHover","style","color","textTransform","fontWeight","marginTop","padding","fontSize","lineHeight","display","fontStyle","onSubmit","placeholder","value","onChange","target","required","class","role","height","width","marginLeft"],"mappings":"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","file":"static/js/29.b2f0d5c7.chunk.js","sourcesContent":["export default {\r\n    items: [\r\n        {\r\n            id: 'pages',\r\n            title: 'Pages',\r\n            type: 'group',\r\n            icon: 'icon-pages',\r\n            children: [\r\n                {\r\n                    id: 'dashboard',\r\n                    title: 'Dashboard',\r\n                    type: 'item',\r\n                    url: '/dashboard',\r\n                    classes: 'nav-item',\r\n                    icon: 'fa fa-home'\r\n                },\r\n                {\r\n                    id: 'users',\r\n                    title: 'Users',\r\n                    type: 'item',\r\n                    url: '/users',\r\n                    classes: 'nav-item',\r\n                    icon: 'fa fa-users'\r\n                },\r\n                {\r\n                    id: 'exam',\r\n                    title: 'Courses',\r\n                    type: 'item',\r\n                    url: '/courses',\r\n                    classes: 'nav-item',\r\n                    icon: 'fa fa-book'\r\n                },\r\n                {\r\n                    id: 'exam',\r\n                    title: 'Exams',\r\n                    type: 'item',\r\n                    url: '/exams',\r\n                    classes: 'nav-item',\r\n                    icon: 'fa fa-graduation-cap'\r\n                }     \r\n            ]\r\n        }\r\n    ]\r\n}","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport config from '../../../../config';\r\nimport navigation from '../../../../menu-items';\r\nimport DEMO from \"../../../../store/constant\";\r\nimport Aux from \"../../../../hoc/_Aux\";\r\n\r\nclass Breadcrumb extends Component {\r\n    state = {\r\n        main: [],\r\n        item: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        (navigation.items).map((item, index) => {\r\n            if (item.type && item.type === 'group') {\r\n                this.getCollapse(item, index);\r\n            }\r\n            return false;\r\n        });\r\n    };\r\n\r\n    componentWillReceiveProps = () => {\r\n        (navigation.items).map((item, index) => {\r\n            if (item.type && item.type === 'group') {\r\n                this.getCollapse(item);\r\n            }\r\n            return false;\r\n        });\r\n    };\r\n\r\n    getCollapse = (item) => {\r\n        if (item.children) {\r\n            (item.children).filter( collapse => {\r\n                if (collapse.type && collapse.type === 'collapse') {\r\n                    this.getCollapse(collapse,);\r\n                } else if (collapse.type && collapse.type === 'item') {\r\n                    if (document.location.pathname === config.basename+collapse.url) {\r\n                        this.setState({item: collapse, main: item});\r\n                    }\r\n                }\r\n                return false;\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let main, item;\r\n        let breadcrumb = '';\r\n        let title = 'Welcome';\r\n        if (this.state.main && this.state.main.type === 'collapse') {\r\n            main = (\r\n                <li className=\"breadcrumb-item\">\r\n                    <a href={DEMO.BLANK_LINK}>{this.state.main.title}</a>\r\n                </li>\r\n            );\r\n        }\r\n\r\n        if (this.state.item && this.state.item.type === 'item') {\r\n            title = this.state.item.title;\r\n            item = (\r\n                <li className=\"breadcrumb-item\">\r\n                    <a href={DEMO.BLANK_LINK}>{title}</a>\r\n                </li>\r\n            );\r\n\r\n            if(this.state.item.breadcrumbs !== false) {\r\n                breadcrumb = (\r\n                    <div className=\"page-header\">\r\n                        <div className=\"page-block\">\r\n                            <div className=\"row align-items-center\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"page-header-title\">\r\n                                        <h5 className=\"m-b-10\">{title}</h5>\r\n                                    </div>\r\n                                    <ul className=\"breadcrumb\">\r\n                                        <li className=\"breadcrumb-item\">\r\n                                            <Link to=\"/\"><i className=\"feather icon-home\"/></Link>\r\n                                        </li>\r\n                                        {main}\r\n                                        {item}\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n        document.title = title + ' | Datta Able Free React + Redux Admin Template';\r\n\r\n        return (\r\n            <Aux>\r\n                {breadcrumb}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Breadcrumb;","import React, { useState } from 'react';\nimport {Link,NavLink} from 'react-router-dom';\nimport Logo from '../../../assets/images/logo.png';\nimport './../../../assets/scss/style.scss';\nimport Aux from \"../../../hoc/_Aux\";\nimport Breadcrumb from \"../../../App/layout/AdminLayout/Breadcrumb\";\nimport DEMO from \"../../../store/constant\";\nimport axios from \"axios\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst ForgotPassword = (props) => {\n\n    const[email,setEmail]=useState('')\n    const[loading, setLoading] = useState(false)\n\n    const handleSubmit=async(e)=>{\n        e.preventDefault()\n        setLoading(true)\n        try{\n          const results = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/forgot-password/`, {\n            email\n          })\n          toast.success(\"Verification mail has been send to you email. Please check your email\")\n          setLoading(false)\n          setEmail('')\n        }\n        catch(e){\n            if(e.response.data){\n                setLoading(false)\n                toast.error(e.response.data.email[0])\n            }\n        }\n        \n      }\n\n    return(\n        <>\n            <ToastContainer autoClose={4000} pauseOnHover={false}/>\n            <Aux>\n                <Breadcrumb/>\n                <div className=\"auth-wrapper\">\n                    <div className=\"auth-content\">\n                        <div className=\"auth-bg\">\n                            <span className=\"r\"/>\n                            <span className=\"r s\"/>\n                            <span className=\"r s\"/>\n                            <span className=\"r\"/>\n                        </div>\n                        <div className=\"card\">\n                            <div className=\"card-body text-center\">\n                                <div className=\"mb-4\">\n                                    <Link to=\"/\">\n                                        <p style={{\n                                              color: \"#35A9F5\",\n                                              textTransform: \"uppercase\",\n                                              fontWeight: \"bold\",\n                                              marginTop: \"22px\",\n                                              padding: \"20px 10px\",\n                                              fontSize: \"25px\",\n                                              lineHeight: \"21px\"\n                                        }}>E-learning <span style={{ \n                                            display: \"block\",\n                                            textTransform: \"capitalize\",\n                                            fontStyle: \"inherit\",\n                                            fontSize: \"12px\"\n                                        }}>Management System</span></p>\n                                    </Link>\n                                </div>\n                                <h3 className=\"mb-4\">Reset Password</h3>\n                                <form onSubmit={handleSubmit}>\n                                <div className=\"input-group mb-3\">\n                                    <input \n                                        type=\"email\" \n                                        className=\"form-control\" \n                                        placeholder=\"Email\"\n                                        id=\"email\"\n                                        value={email} \n                                        onChange={(e)=>setEmail(e.target.value)}\n                                        required\n                                    />\n                                </div>\n                                <button className=\"btn btn-primary shadow-2 mb-4\">Send\n                                    {loading && (\n                                        <div class=\"spinner-border\" role=\"status\" style={{height: '15px', width: '15px', marginLeft: '5px'}}>\n                                          <span class=\"sr-only\">Loading...</span>\n                                        </div>\n                                    )}\n                                </button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Aux>\n        </>\n    );\n    \n}\n\nexport default ForgotPassword;","const DEMO = {\r\n    BLANK_LINK: \"#!\",\r\n};\r\n\r\nexport default DEMO;"],"sourceRoot":""}