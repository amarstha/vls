{"version":3,"sources":["assets/images/loader.gif","Demo/home/AddCourseCategory.js","Demo/home/AddCourse.js","Demo/home/AdminCoursesList.js","Demo/home/TrainerCoursesList.js","Demo/home/LearnerCoursesList.js","Demo/home/Courses.js"],"names":["AddCourseCategory","props","useState","show","setShow","handleClose","title","setTitle","data","setData","isDataUpdated","setIsDataUpdated","e","a","preventDefault","PostCourseCategory","Id","deleteCourseCategory","useEffect","fetchedData","getCourseCategory","results","Modal","onHide","Body","Form","Group","controlId","Label","Control","type","id","value","onChange","target","className","map","item","index","Row","Col","md","onClick","handleDelete","style","cursor","Footer","Button","variant","AddCourse","initialState","category","description","thumbnail","video","pdf","lessonData","setLessonData","clearState","handleChange","handleFileChange","event","files","key","formData","FormData","append","postCourse","console","log","as","Fragment","rows","File","label","AdminCoursesList","loading","setLoading","page","setPage","perPage","setPerPage","totalPage","setTotalPage","params","limit","offset","axios","get","process","Math","ceil","count","fetchMyAPI","onPageChange","newPage","paginationConfig","totalPages","currentPage","showMax","size","threeDots","prevNext","marginTop","src","loaderImage","margin","length","scope","maxWidth","overflow","created_by","created_date","slice","display","alignItems","justifyContent","to","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","swal","text","icon","buttons","dangerMode","then","willDelete","token","localStorage","getItem","axiosConfig","headers","Authorization","delete","deleteCourse","window","location","reload","TrainerCoursesList","getTrainerCourses","LearnerCoursesList","Courses","loggedInUser","useContext","AuthContext","Card","Header","Title","is_admin","is_staff","Table","responsive","hover","textAlign"],"mappings":"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","file":"static/js/41.f32a04d2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loader.488387b4.gif\";","import React, { useState,useEffect } from 'react';\nimport {Row, Col, Form, Button, Modal} from 'react-bootstrap';\nimport { getCourseCategory,PostCourseCategory,deleteCourseCategory } from '../../api';\n\nfunction AddCourseCategory(props){\n\n\tconst [show, setShow] = useState(false);\n\tconst handleClose = () => setShow(false);\n\tconst handleShow = () => setShow(true);\n\n\tconst [title, setTitle] = useState('');\n\tconst [data, setData] = useState('');\n\tconst [isDataUpdated, setIsDataUpdated] = useState(true);\n\n\tfunction handleChange(e) {\n        setTitle(e.target.value);\n    }\n\n    async function handleSubmit(e){\n    \te.preventDefault();\n    \tawait PostCourseCategory({title});\n    \tsetIsDataUpdated(true);\n    \tsetTitle('');\n    }\n\n    async function handleDelete(Id){\n    \tawait deleteCourseCategory(Id);\n    \tsetIsDataUpdated(true);\n    }\n\n\tuseEffect(()=>{\n\t\tconst fetchedData=async()=>{\n\t\t\tconst results = await getCourseCategory();\n\t\t\tsetData(results.data.results);\n\t\t\tsetIsDataUpdated(false);\n\t\t}\n\t\tif(isDataUpdated){\n\t\t\tfetchedData()\n\t\t}\n\t},[isDataUpdated])\n\n\treturn(\n\t\t<>\n\t\t\t<Modal show={show} onHide={handleClose}>\n\t\t        <Modal.Body>\n\t\t\t\t\t<Form.Group controlId=\"exampleForm.ControlTitle\">\n\t\t\t\t\t    <Form.Label>Title</Form.Label>\n\t\t\t\t\t    <Form.Control \n\t\t\t\t\t    type=\"text\" \n\t\t\t\t\t    id={title}\n\t\t\t\t\t    value={title}\n\t\t\t\t\t    onChange={handleChange}\n\t\t\t\t\t    />\n\t\t\t        <ul className='pl-3 pt-5'>\n\t\t\t        \t{data && data.map((item,index)=>(\n\t\t\t        \t\t<li key={index}>\n\t\t\t\t        \t\t<Row>\n\t\t\t\t        \t\t\t<Col md={8}>\n\t\t\t\t        \t\t\t\t<i className=\"fas fa-check-circle pr-2\"></i>{item.title}\n\t\t\t\t        \t\t\t</Col>\n\t\t\t\t        \t\t\t<Col md={4}>\n\t\t\t\t        \t\t\t\t<i className=\"fas fa-trash-alt\" onClick={()=>handleDelete(item.id)} style={{ cursor: 'pointer' }}></i>\n\t\t\t\t        \t\t\t</Col>\n\t\t\t\t        \t\t</Row>\n\t\t\t        \t\t</li>\n\t\t\t        \t))}\n\t\t\t        </ul>\n\t\t\t\t\t</Form.Group>\n\t\t        </Modal.Body>\n\t\t        <Modal.Footer>\n\t\t          <Button variant=\"primary\" onClick={handleSubmit}>\n\t\t            Save\n\t\t          </Button>\n\t\t          <Button variant=\"secondary\" onClick={handleClose}>\n\t\t            Close\n\t\t          </Button>\n\t\t        </Modal.Footer>\n\t\t    </Modal>\n\t\t\t<button className=\"label theme-bg2 text-white f-14 p-2\" onClick={handleShow}>Add Category</button>\n\t\t</>\n\t)\n}\nexport default AddCourseCategory;","import React, { useState,useEffect } from 'react';\nimport {Row, Col, Form, Button, Modal} from 'react-bootstrap';\nimport { postCourse,getCourseCategory } from '../../api';\n\nfunction AddCourse() {\n\n\tconst [show, setShow] = useState(false);\n\tconst handleClose = () => setShow(false);\n\tconst handleShow = () => setShow(true);\n\n\tconst initialState = {\n\t\tcategory: '',\n\t\ttitle: '',\n\t\tdescription: '',\n\t\tthumbnail: '',\n\t\tvideo: '',\n\t\tpdf: '',\n\t}\n\tconst [data, setData] = useState('');\n\tconst { category,title,description,thumbnail,video,pdf } = data;\n\tconst [lessonData, setLessonData] = useState('');\n\n\tfunction clearState() {\n\t    setData({ ...initialState });\n\t  }\n\n\tfunction handleChange(e){\n\t\tsetData({...data, [e.target.id]: e.target.value})\n\t}\n\n\tfunction handleFileChange(event) {\n\t    setData({ ...data, [event.target.id]: event.target.files[0] });\n\t}\n\n\tasync function handleSubmit(e){\n\t\te.preventDefault();\n\t\ttry{\n\t\t\tconst formData = new FormData();\n\t\t    formData.append('thumbnail', data.thumbnail);\n\t\t    formData.append('video', data.video);\n\t\t    formData.append('pdf', data.pdf);\n\t\t\tfor (let key in data) {\n\t\t\t\tformData.append(key, data[key]);\n\t\t\t}\n\t\t\tawait postCourse(formData);\n\t\t\tclearState();\n\t\t\thandleClose();\n\t\t}catch(error){\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\tuseEffect(()=>{\n\t\t(async() => {\n\t\t\tconst results = await getCourseCategory();\n\t\t\tsetLessonData(results.data.results);\n\t\t})()\n\t},[])\n\n\treturn(\n\t\t<>\t\n\t\t\t<Modal show={show} onHide={handleClose}>\n\t\t\t\t <Form>\n\t\t\t\t\t <Modal.Body>\n\t\t\t\t\t\t <Form.Group>\n\t\t\t\t\t\t    <Form.Label>Category</Form.Label>\n\t\t\t\t\t\t    <Form.Control as=\"select\" id=\"category\" onChange={handleChange}>\n\t\t\t\t\t\t     <option value=\"\">--Select--</option>\n\t\t\t\t\t\t     {lessonData && lessonData.map((item,index) => (\n\t\t\t\t\t\t     \t<React.Fragment key={index}>\n\t\t\t\t\t\t       \t\t<option value={item.id}>{item.title}</option>\n\t\t\t\t\t\t        </React.Fragment>\n\t\t\t\t\t\t     ))\n\t\t\t\t\t\t     }\n\t\t\t\t\t\t    </Form.Control>\n\t\t\t\t\t\t  </Form.Group>\n\n\t\t\t\t\t\t  <Form.Group>\n\t\t\t\t\t\t    <Form.Label>Title</Form.Label>\n\t\t\t\t\t\t    <Form.Control \n\t\t\t\t\t\t    \ttype=\"text\" \n\t\t\t\t\t\t    \tid=\"title\"\n\t\t\t\t\t\t    \tonChange={handleChange}\n\t\t\t\t\t\t    \tvalue={title}\n\t\t\t\t\t\t    />\n\t\t\t\t\t\t  </Form.Group>\n\n\t\t\t\t\t\t  <Form.Group>\n\t\t\t\t\t\t    <Form.Label>Description</Form.Label>\n\t\t\t\t\t\t    <Form.Control \n\t\t\t\t\t\t\t    as=\"textarea\" \n\t\t\t\t\t\t\t    rows={3} \n\t\t\t\t\t\t\t    id=\"description\"\n\t\t\t\t\t\t\t    onChange={handleChange}\n\t\t\t\t\t\t    \tvalue={description}\n\t\t\t\t\t\t    />\n\t\t\t\t\t\t  </Form.Group>\n\n\t\t\t\t\t\t  <Form.Group>\n\t\t\t\t\t\t    <Form.File \n\t\t\t\t\t\t\t    id=\"thumbnail\" \n\t\t\t\t\t\t\t    label=\"Thumbnail\"\n\t\t\t\t\t\t\t    onChange={handleFileChange} \n\t\t\t\t\t\t    />\n\t\t\t\t\t\t  </Form.Group>\n\n\t\t\t\t\t\t  <Form.Group>\n\t\t\t\t\t\t    <Form.File \n\t\t\t\t\t\t\t    id=\"video\" \n\t\t\t\t\t\t\t    label=\"Video\"\n\t\t\t\t\t\t\t    onChange={handleFileChange} \n\t\t\t\t\t\t    />\n\t\t\t\t\t\t  </Form.Group>\n\n\t\t\t\t\t\t  <Form.Group>\n\t\t\t\t\t\t    <Form.File \n\t\t\t\t\t\t\t    id=\"pdf\" \n\t\t\t\t\t\t\t    label=\"PDF\" \n\t\t\t\t\t\t\t    onChange={handleFileChange}\n\t\t\t\t\t\t    />\n\t\t\t\t\t\t  </Form.Group>\n\n\t\t\t\t\t </Modal.Body>\n\t\t\t\t\t <Modal.Footer>\n\t\t\t          <Button variant=\"primary\" onClick={handleSubmit}>\n\t\t\t            Save\n\t\t\t          </Button>\n\t\t\t          <Button variant=\"secondary\" onClick={handleClose}>\n\t\t\t            Close\n\t\t\t          </Button>\n\t\t\t        </Modal.Footer>\n\t\t\t\t</Form>\n\t\t\t</Modal>\n\t\t\t<button className=\"label theme-bg2 text-white f-14 p-2\" onClick={handleShow}>Add Course</button>\n\t\t</>\n\t)\n}\nexport default AddCourse;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport loaderImage from '../../assets/images/loader.gif';\nimport Pagination from 'react-bootstrap-4-pagination';\nimport Aux from \"../../hoc/_Aux\";\nimport swal from 'sweetalert';\nimport axios from 'axios';\n\nconst AdminCoursesList = () => {\n\n\tconst[data, setData] = useState([])\n\tconst[loading, setLoading] = useState(false)\n\tconst [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(10);\n  const [totalPage, setTotalPage] = useState(1);\n\n\tuseEffect(() => {\n    \tsetLoading(true)\n\t    async function fetchMyAPI() {\n\t    \tconst params = {\n                limit: perPage,\n                offset: (page - 1) * perPage,\n        };\n\t\t\tlet results = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/api/lesson/`,{params});\n\t\t\tsetTotalPage(Math.ceil(results.data.count / 10));\n\t\t\tsetData(results.data);\n\t\t    setLoading(false)\n\t    }\n\n\t    fetchMyAPI()\n\t}, [])\n\n\tfunction deleteCourse(Id) {\n\t    const token = localStorage.getItem(\"jwt_token\");\n\t    const axiosConfig = {\n\t        headers: {\n\t          'Content-Type': 'application/json',\n\t          Authorization: `Token ${token}`,\n\t      }\n\t    };\n\t    return axios.delete(`${process.env.REACT_APP_API_BASE_URL}/api/lesson/${Id}/`, axiosConfig)\n\t}\n\n\tconst onPageChange = async (newPage) => {\n        setPage(newPage);\n        const params = {\n          limit: 10,\n          offset: (newPage - 1) * 10,\n        };\n        let results = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/api/lesson/`,{params});\n\t\tsetData(results.data);\n        setPerPage(newPage);\n    }\n\n    let paginationConfig = {\n      totalPages: totalPage,\n      currentPage: page,\n      showMax: 5,\n      size: \"sm\",\n      threeDots: true,\n      prevNext: true,\n      onClick: onPageChange\n    };\n\n\t\t\n\treturn (\n\t\t<React.Fragment style={{ marginTop: '-30px' }}>\n\t\t<tbody>\n\t\t\t{loading && loading ? (\n            \t<img src={loaderImage} style={{margin: 'auto'}}/>\n        \t): (\n\t\t\t<>\t\t\n\t\t\t\t\t\t{data.results && data.results.length > 0 ? (\n\t\t\t\t\t\t\t<>\n\t\t        \t\t{data.results && data.results.map((item,index) => (\n\t\t                <tr key={index}>\n\t\t                    <th scope=\"row\"><i className=\"fas fa-check-circle\"></i></th>\n\t\t                    <td style={{ maxWidth: '200px', overflow: 'auto' }}>{item && item.title ? (item.title) : 'N/A'}</td>\n\t\t                    <td>{item && item.category.title ? (item.category.title): 'N/A'}</td>\n\t\t                    <td className=\"text-success\">{item && item.created_by ? (item.created_by): 'N/A'}</td>\n\t\t                    <td>{item && item.created_date ? (item.created_date.slice(0,10)): 'N/A'}</td>\n\t\t                    <td style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n\t\t                        <Link to={`course/${item.id}`} className=\"pr-2 text-indigo-500\">\n\t\t                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n\t\t                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n\t\t                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n\t\t                            </svg>\n\t\t                        </Link>\n\t\t                        <Link to={`/course/edit/${item.id}`} className=\"pr-2 text-indigo-500\">\n\t\t                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n\t\t                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n\t\t                            </svg>\n\t\t                        </Link>\n\t\t                        <button \n\t\t\t                        onClick={() => {\n\t\t\t\t\t\t\t      \t\tswal({\n\t\t\t\t\t\t\t\t\t      title: \"Are you sure?\",\n\t\t\t\t\t\t\t\t\t\t  text: \"Once deleted, you will not be able to recover this data!\",\n\t\t\t\t\t\t\t\t\t\t  icon: \"warning\",\n\t\t\t\t\t\t\t\t\t\t  buttons: true,\n\t\t\t\t\t\t\t\t\t\t  dangerMode: true,\n\t\t\t\t\t\t\t\t\t    }).then((willDelete) => {\n\t\t\t\t\t\t\t\t\t    \tif (willDelete) {\n\t\t\t\t\t\t\t\t\t\t       deleteCourse(item.id);\n\t\t\t\t\t\t\t\t\t\t       window.location.reload();\n\t\t\t\t\t\t\t\t\t\t    }\n\t\t\t\t\t\t\t\t\t    })\n\t\t\t\t\t\t\t      \t}}\n\t\t\t                        className=\"pr-2 text-indigo-500\"\n\t\t                        >\n\t\t                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n\t\t                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n\t\t                            </svg>\n\t\t                        </button>\n\t\t                    </td>\n\t\t                </tr>\n\t\t            ))}\n\t\t            <Pagination {...paginationConfig} />\n\t            </>\n\t          ):(<p style={{ marginTop: '20px' }}>No Data</p>)}\n      </>\n      )}\n    </tbody>\n    </React.Fragment>\n\t)\n}\nexport default AdminCoursesList;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport loaderImage from '../../assets/images/loader.gif';\nimport Pagination from 'react-bootstrap-4-pagination';\nimport Aux from \"../../hoc/_Aux\";\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport { getTrainerCourses } from '../../api';\n\nconst TrainerCoursesList = () => {\n\n    const[data, setData] = useState('')\n    const[loading, setLoading] = useState(false)\n    const [page, setPage] = useState(1);\n    const [perPage, setPerPage] = useState(10);\n    const [totalPage, setTotalPage] = useState(1);\n\n    useEffect(() => {\n        setLoading(true)\n        async function fetchMyAPI() {\n            const params = {\n                limit: perPage,\n                offset: (page - 1) * perPage,\n        };\n            let results = await getTrainerCourses(params)\n            setTotalPage(Math.ceil(results.data.count / 10));\n            setData(results.data);\n            setLoading(false)\n        }\n\n        fetchMyAPI()\n    }, [])\n\n    function deleteCourse(Id) {\n        const token = localStorage.getItem(\"jwt_token\");\n        const axiosConfig = {\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: `Token ${token}`,\n          }\n        };\n        return axios.delete(`${process.env.REACT_APP_API_BASE_URL}/api/lesson/${Id}/`, axiosConfig)\n    }\n\n    const onPageChange = async (newPage) => {\n        setPage(newPage);\n        const params = {\n          limit: 10,\n          offset: (newPage - 1) * 10,\n        };\n        let results = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/api/lesson/`,{params});\n        setData(results.data);\n        setPerPage(newPage);\n    }\n\n    let paginationConfig = {\n      totalPages: totalPage,\n      currentPage: page,\n      showMax: 5,\n      size: \"sm\",\n      threeDots: true,\n      prevNext: true,\n      onClick: onPageChange\n    };\n\n        \n    return (\n        <React.Fragment style={{ marginTop: '-30px' }}>\n        <tbody>\n            {loading && loading ? (\n                <img src={loaderImage} style={{margin: 'auto'}}/>\n            ): (\n            <>\n                {data.results && data.results.length > 0 ? (\n                    <>\n                    {data.results.map((item,index) => (\n                        <tr key={index}>\n                            <th scope=\"row\"><i className=\"fas fa-check-circle\"></i></th>\n                            <td style={{ maxWidth: '200px', overflow: 'auto' }}>{item && item.title ? (item.title) : 'N/A'}</td>\n                            <td>{item && item.category.title ? (item.category.title): 'N/A'}</td>\n                            <td className=\"text-success\">{item && item.created_by ? (item.created_by): 'N/A'}</td>\n                            <td>{item && item.created_date ? (item.created_date.slice(0,10)): 'N/A'}</td>\n                            <td style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n                                <Link to={`course/${item.id}`} className=\"pr-2 text-indigo-500\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                                    </svg>\n                                </Link>\n                                <Link to={`/course/edit/${item.id}`} className=\"pr-2 text-indigo-500\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                                    </svg>\n                                </Link>\n                                <button \n                                    onClick={() => {\n                                        swal({\n                                          title: \"Are you sure?\",\n                                          text: \"Once deleted, you will not be able to recover this data!\",\n                                          icon: \"warning\",\n                                          buttons: true,\n                                          dangerMode: true,\n                                        }).then((willDelete) => {\n                                            if (willDelete) {\n                                               deleteCourse(item.id);\n                                               window.location.reload();\n                                            }\n                                        })\n                                    }}\n                                    className=\"pr-2 text-indigo-500\"\n                                >\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                                    </svg>\n                                </button>\n                            </td>\n                        </tr>\n                    ))}\n                    <Pagination {...paginationConfig} />\n                    </>\n                ):(<p style={{ marginTop: '20px' }}>No Data</p>)}\n            </>\n            )}\n        </tbody>\n        </React.Fragment>\n    )\n}\nexport default TrainerCoursesList;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport loaderImage from '../../assets/images/loader.gif';\nimport Pagination from 'react-bootstrap-4-pagination';\nimport Aux from \"../../hoc/_Aux\";\nimport swal from 'sweetalert';\nimport axios from 'axios';\n\nconst LearnerCoursesList = () => {\n\n    const[data, setData] = useState([])\n    const[loading, setLoading] = useState(false)\n    const [page, setPage] = useState(1);\n    const [perPage, setPerPage] = useState(10);\n    const [totalPage, setTotalPage] = useState(1);\n\n    useEffect(() => {\n        setLoading(true)\n        async function fetchMyAPI() {\n            const token = localStorage.getItem(\"jwt_token\");\n            const params = {\n                limit: perPage,\n                offset: (page - 1) * perPage,\n            };\n            let results = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/api/enroll/enrolllessons/`,{\n                headers: {\n                  Authorization: `Token ${token}`\n                },\n                params: params\n            });\n            setTotalPage(Math.ceil(results.data.count / 10));\n            setData(results.data);\n            setLoading(false)\n        }\n\n        fetchMyAPI()\n    }, [])\n\n    function deleteCourse(Id) {\n        const token = localStorage.getItem(\"jwt_token\");\n        const axiosConfig = {\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: `Token ${token}`,\n          }\n        };\n        return axios.delete(`${process.env.REACT_APP_API_BASE_URL}/api/lesson/${Id}/`, axiosConfig)\n    }\n\n    const onPageChange = async (newPage) => {\n        setPage(newPage);\n        const token = localStorage.getItem(\"jwt_token\");\n        const params = {\n          limit: 10,\n          offset: (newPage - 1) * 10,\n        };\n        let results = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/api/enroll/enrolllessons/`,{\n            headers: {\n              Authorization: `Token ${token}`\n            },\n            params: params\n        });\n        setData(results.data);\n        setPerPage(newPage);\n    }\n\n    let paginationConfig = {\n      totalPages: totalPage,\n      currentPage: page,\n      showMax: 5,\n      size: \"sm\",\n      threeDots: true,\n      prevNext: true,\n      onClick: onPageChange\n    };\n\n        \n    return (\n        <React.Fragment style={{ marginTop: '-30px' }}>\n        <tbody>\n            {loading && loading ? (\n                <img src={loaderImage} style={{margin: 'auto'}}/>\n            ): (\n            <>\n                {data.results && data.results.length > 0 ? (\n                    <>\n                        {data.results && data.results.map((item,index) => (\n                            <tr key={index}>\n                                <th scope=\"row\"><i className=\"fas fa-check-circle\"></i></th>\n                                <td style={{ maxWidth: '200px', overflow: 'auto' }}>{item && item.title ? (item.title) : 'N/A'}</td>\n                                <td>{item && item.category.title ? (item.category.title): 'N/A'}</td>\n                                <td className=\"text-success\">{item && item.created_by ? (item.created_by): 'N/A'}</td>\n                                <td>{item && item.created_date ? (item.created_date.slice(0,10)): 'N/A'}</td>\n                                <td style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n                                    <Link to={`course/${item.id}`} className=\"pr-2 text-indigo-500\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\n                                        </svg>\n                                    </Link>\n                                </td>\n                            </tr>\n                        ))}\n                        <Pagination {...paginationConfig} />\n                    </>\n                ):(<p style={{ marginTop: '20px' }}>No Data</p>)}\n            </>\n            )}\n        </tbody>\n        </React.Fragment>\n    )\n}\nexport default LearnerCoursesList;","import React, { useContext } from 'react';\nimport {Row, Col, Card, Table} from 'react-bootstrap';\nimport AddCourseCategory from './AddCourseCategory';\nimport AddCourse from './AddCourse';\nimport Aux from \"../../hoc/_Aux\";\nimport { AuthContext } from '../../contexts/Auth';\nimport AdminCoursesList from './AdminCoursesList';\nimport TrainerCoursesList from './TrainerCoursesList';\nimport LearnerCoursesList from './LearnerCoursesList';\n\nfunction Courses(){\n\n\tconst { loggedInUser } = useContext(AuthContext);\n\n    return (\n    \t<>\n        <Aux>\n            <Row>\n                <Col>\n                \t<Card style={{ marginTop: '-30px' }}>\n\n                \t\t<Card.Header>\n                \t\t\t<Row>\n\t                \t\t\t<Col md={10}>\n\t                            \t<Card.Title as=\"h5\">Courses</Card.Title>\n\t                            </Col>\n\t                            {loggedInUser && loggedInUser.is_admin && (\n\t\t                            <Col md={2}>\n\t\t                            \t<AddCourseCategory />\n\t\t                            </Col>\n\t                            )}\n\t                            {loggedInUser && !loggedInUser.is_admin && loggedInUser.is_staff && (\n\t\t                            <Col md={2}>\n\t\t                            \t<AddCourse />\n\t\t                            </Col>\n\t                            )}\n                            </Row>\n                        </Card.Header>\n\n                        <Card.Body>\n\t                        <Table responsive hover style={{textAlign: 'center'}}>\n\t                            <thead>\n\t                                <tr>\n\t                                    <th>SN</th>\n\t                                    <th>Title</th>\n\t                                    <th>Category</th>\n\t                                    <th>Created By</th>\n\t                                    <th>Created Date</th>\n\t                                    <th>Action</th>\n\t                                </tr>\n\t                            </thead>\n\t                            {loggedInUser && loggedInUser.is_admin && (\n\t                            \t<AdminCoursesList />\n\t                            )}\n\t                            {loggedInUser && !loggedInUser.is_admin && loggedInUser.is_staff &&(\n\t                            \t<TrainerCoursesList />\n\t                            )}\n\t                            {loggedInUser && !loggedInUser.is_admin && !loggedInUser.is_staff && (\n\t                            \t<LearnerCoursesList />\n\t                            )}\n\t                        </Table>\n                        </Card.Body>\n\n                    </Card>\n                </Col>\n            </Row>\n        </Aux>\n        </>\n    );\n    \n}\n\nexport default Courses;"],"sourceRoot":""}